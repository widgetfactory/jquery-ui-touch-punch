/*!
 * jQuery UI Touch Punch 0.2.3
 *
 * Copyright 2011â€“2014, Dave Furfero
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Depends:
 *  jquery.ui.widget.js
 *  jquery.ui.mouse.js
 */
(function($){if(!$.ui||!$.ui.mouse){return}var mouseProto=$.ui.mouse.prototype;var _mouseInit=mouseProto._mouseInit;var _mouseDestroy=mouseProto._mouseDestroy;var hasPointer=typeof window!=='undefined'&&'PointerEvent'in window;var hasTouch=(function(){if(hasPointer){return true}return typeof window!=='undefined'&&('ontouchstart'in window||(window.DocumentTouch&&document instanceof window.DocumentTouch))}());if(!hasTouch){return}var touchHandled=false;function simulateMouseEvent(event,simulatedType){var orig=event.originalEvent||event;var point;if(orig.touches&&orig.touches.length>1){return}if(orig.changedTouches&&orig.changedTouches.length){point=orig.changedTouches[0]}else{point=orig}if(typeof event.preventDefault==='function'){event.preventDefault()}var opts={bubbles:true,cancelable:true,view:window,detail:1,screenX:point.screenX||0,screenY:point.screenY||0,clientX:point.clientX||0,clientY:point.clientY||0,ctrlKey:!!event.ctrlKey,altKey:!!event.altKey,shiftKey:!!event.shiftKey,metaKey:!!event.metaKey,button:0,relatedTarget:null};var simulatedEvent;try{simulatedEvent=new MouseEvent(simulatedType,opts)}catch(e){simulatedEvent=document.createEvent('MouseEvents');simulatedEvent.initMouseEvent(simulatedType,true,true,window,1,opts.screenX,opts.screenY,opts.clientX,opts.clientY,opts.ctrlKey,opts.altKey,opts.shiftKey,opts.metaKey,opts.button,opts.relatedTarget)}(event.target||event.srcElement).dispatchEvent(simulatedEvent)}mouseProto._touchStart=function(event){var self=this;var orig=event.originalEvent||event;if(hasPointer&&orig.pointerType&&orig.pointerType!=='touch'){return}if(touchHandled||!self._mouseCapture(hasPointer?orig:(orig.changedTouches?orig.changedTouches[0]:orig))){return}touchHandled=true;self._touchMoved=false;simulateMouseEvent(event,'mouseover');simulateMouseEvent(event,'mousemove');simulateMouseEvent(event,'mousedown')};mouseProto._touchMove=function(event){if(!touchHandled){return}this._touchMoved=true;simulateMouseEvent(event,'mousemove')};mouseProto._touchEnd=function(event){if(!touchHandled){return}simulateMouseEvent(event,'mouseup');simulateMouseEvent(event,'mouseout');if(!this._touchMoved){simulateMouseEvent(event,'click')}touchHandled=false};mouseProto._mouseInit=function(){var self=this;var ns='.touchpunch';var $el=self.element;var el=$el.get(0);function bindRaw(type,handler){el.addEventListener(type,handler,{capture:false,passive:false})}function unbindRaw(type,handler){el.removeEventListener(type,handler,{capture:false})}var onStart=function(e){return self._touchStart(e)};var onMove=function(e){return self._touchMove(e)};var onEnd=function(e){return self._touchEnd(e)};self._tpHandlers={onStart:onStart,onMove:onMove,onEnd:onEnd,bindRaw:bindRaw,unbindRaw:unbindRaw,ns:ns};if(hasPointer){bindRaw('pointerdown',onStart);bindRaw('pointermove',onMove);bindRaw('pointerup',onEnd);bindRaw('pointercancel',onEnd);}else{bindRaw('touchstart',onStart);bindRaw('touchmove',onMove);bindRaw('touchend',onEnd);bindRaw('touchcancel',onEnd)}_mouseInit.call(self)};mouseProto._mouseDestroy=function(){var self=this;var h=self._tpHandlers;if(h&&h.unbindRaw){if(hasPointer){h.unbindRaw('pointerdown',h.onStart);h.unbindRaw('pointermove',h.onMove);h.unbindRaw('pointerup',h.onEnd);h.unbindRaw('pointercancel',h.onEnd)}else{h.unbindRaw('touchstart',h.onStart);h.unbindRaw('touchmove',h.onMove);h.unbindRaw('touchend',h.onEnd);h.unbindRaw('touchcancel',h.onEnd)}}self._tpHandlers=null;_mouseDestroy.call(self)}}(jQuery));
